name: Build & deploy

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Run build
        run: echo "sdfsdfsdf ${{ env.BUILD_ENV }}"

      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run lint
        run: yarn lint

      - name: Run test
        run: yarn test

      - name: Run build
        run: BUILD_ENV=${{ secrets.BUILD_ENV }} yarn build

  deploy-stage:
    needs: [lint]
    if: github.ref == 'refs/heads/stage'
    runs-on: ubuntu-latest

    steps:   
      - name: Configure AWS credentials for stage account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGE_AWS_SECRET_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGE_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Copy build dir to s3 bucket
        run: |
          aws s3 cp build/ s3://app.stage.ssv.network/ --recursive

  deploy-main:
    needs: [lint]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:   
      - name: Configure AWS credentials for prod account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_SECRET_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Copy build dir to s3 bucket
        run: |
          aws s3 cp build/ s3://app.testnet.ssv.network/ --recursive          
